{"ast":null,"code":"import { CURRENT_USER_ENDPOINT } from \"../tools/endpoints\";\nimport { CURRENT_USER_REQUEST, PROFILE_REQUEST } from \"../general_views/actionTypes\";\nimport axiosInstance from \"../tools/helpers\";\nexport const getUserData = () => dispatch => {\n  axiosInstance.get(CURRENT_USER_ENDPOINT).then(respData => {\n    dispatch({\n      type: CURRENT_USER_REQUEST,\n      payload: respData.data\n    });\n  });\n};\nexport const getProfileData = () => dispatch => {\n  axiosInstance.get(PROFILE_REQUEST).then(respData => {\n    dispatch({\n      type: PROFILE_REQUEST,\n      payload: respData.data\n    });\n  });\n};\nexport const loginAction = data => dispatch => {\n  const new_data = {\n    username: data.username,\n    password: data.password\n  };\n  axiosInstance.post(LOGIN_ENDPOINT, new_data).then(respData => {\n    axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + respData.data.access;\n    localStorage.setItem('access_token', respData.data.access);\n    localStorage.setItem('refresh_token', respData.data.refresh);\n    localStorage.setItem('isAuthenticated', true);\n    return dispatch({\n      type: LOGIN_SUCCESS,\n      payload: respData.data\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/Zefarak/Desktop/projects/react_nutrition_ecosystem/frontend/src/actions/authActions.js"],"names":["CURRENT_USER_ENDPOINT","CURRENT_USER_REQUEST","PROFILE_REQUEST","axiosInstance","getUserData","dispatch","get","then","respData","type","payload","data","getProfileData","loginAction","new_data","username","password","post","LOGIN_ENDPOINT","defaults","headers","access","localStorage","setItem","refresh","LOGIN_SUCCESS"],"mappings":"AAAA,SAAQA,qBAAR,QAAoC,oBAApC;AACA,SAAQC,oBAAR,EAA8BC,eAA9B,QAAoD,8BAApD;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAGA,OAAO,MAAMC,WAAW,GAAE,MAAMC,QAAQ,IAAE;AACtCF,EAAAA,aAAa,CAACG,GAAd,CAAkBN,qBAAlB,EACKO,IADL,CACUC,QAAQ,IAAE;AACZH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER,oBADD;AAELS,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GANL;AAOH,CARM;AAWP,OAAO,MAAMC,cAAc,GAAG,MAAMP,QAAQ,IAAI;AAC5CF,EAAAA,aAAa,CAACG,GAAd,CAAkBJ,eAAlB,EACKK,IADL,CACUC,QAAQ,IAAE;AACZH,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEP,eADD;AAELQ,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GANL;AAOH,CARM;AAWP,OAAO,MAAME,WAAW,GAAGF,IAAI,IAAIN,QAAQ,IAAI;AAC3C,QAAMS,QAAQ,GAAG;AACbC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QADF;AAEbC,IAAAA,QAAQ,EAAEL,IAAI,CAACK;AAFF,GAAjB;AAIAb,EAAAA,aAAa,CAACc,IAAd,CAAmBC,cAAnB,EAAmCJ,QAAnC,EACKP,IADL,CAEQC,QAAQ,IAAE;AACNL,IAAAA,aAAa,CAACgB,QAAd,CAAuBC,OAAvB,CAA+B,eAA/B,IAAkD,YAAYZ,QAAQ,CAACG,IAAT,CAAcU,MAA5E;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCf,QAAQ,CAACG,IAAT,CAAcU,MAAnD;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCf,QAAQ,CAACG,IAAT,CAAca,OAApD;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,IAAxC;AACA,WAAOlB,QAAQ,CAAC;AACZI,MAAAA,IAAI,EAAEgB,aADM;AAEZf,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFN,KAAD,CAAf;AAIH,GAXT;AAaH,CAlBM","sourcesContent":["import {CURRENT_USER_ENDPOINT} from \"../tools/endpoints\";\r\nimport {CURRENT_USER_REQUEST, PROFILE_REQUEST} from \"../general_views/actionTypes\";\r\nimport axiosInstance from \"../tools/helpers\";\r\n\r\n\r\nexport const getUserData =() => dispatch=>{\r\n    axiosInstance.get(CURRENT_USER_ENDPOINT)\r\n        .then(respData=>{\r\n            dispatch({\r\n                type: CURRENT_USER_REQUEST,\r\n                payload: respData.data\r\n            })\r\n        })\r\n};\r\n\r\n\r\nexport const getProfileData = () => dispatch => {\r\n    axiosInstance.get(PROFILE_REQUEST)\r\n        .then(respData=>{\r\n            dispatch({\r\n                type: PROFILE_REQUEST,\r\n                payload: respData.data\r\n            })\r\n        })\r\n}\r\n\r\n\r\nexport const loginAction = data => dispatch => {\r\n    const new_data = {\r\n        username: data.username,\r\n        password: data.password\r\n    };\r\n    axiosInstance.post(LOGIN_ENDPOINT, new_data)\r\n        .then(\r\n            respData=>{\r\n                axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + respData.data.access;\r\n                localStorage.setItem('access_token', respData.data.access);\r\n                localStorage.setItem('refresh_token', respData.data.refresh);\r\n                localStorage.setItem('isAuthenticated', true);\r\n                return dispatch({\r\n                    type: LOGIN_SUCCESS,\r\n                    payload: respData.data\r\n                })\r\n            }\r\n        )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}