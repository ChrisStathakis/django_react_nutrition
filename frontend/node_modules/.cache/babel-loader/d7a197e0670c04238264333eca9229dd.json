{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zefarak\\\\Desktop\\\\projects\\\\react_nutrition_ecosystem\\\\frontend\\\\src\\\\general_views\\\\LoginView.js\";\nimport React from 'react';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport axiosInstance from \"../tools/helpers\";\nimport { TOKEN_ENDPOINT } from \"../tools/endpoints\";\n\nclass LoginView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleText = this.handleText.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  handleText(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    const data = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    axiosInstance.post(TOKEN_ENDPOINT, data).then(respData => {\n      console.log('data', respData);\n      axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + respData.data.access;\n      localStorage.setItem('access_token', respData.data.access);\n      localStorage.setItem('refresh_token', respData.data.refresh);\n      localStorage.setItem('isAuthenticated', 'true');\n    });\n  }\n\n  componentDidMount() {\n    const isAuthenticated = localStorage.getItem('isAuthenticated');\n\n    if (isAuthenticated === true) {\n      console.log('here!');\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }\n    }, \"Log-in to your account\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      name: \"username\",\n      onChange: this.handleText,\n      iconPosition: \"left\",\n      placeholder: \"E-mail address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: this.handleText,\n      name: 'password',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }\n    }, \"Login\"))), /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }\n    }, \"New to us? \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, \"Sign Up\"))));\n  }\n\n}\n\nexport default withRouter(LoginView);","map":{"version":3,"sources":["C:/Users/Zefarak/Desktop/projects/react_nutrition_ecosystem/frontend/src/general_views/LoginView.js"],"names":["React","Button","Form","Grid","Header","Message","Segment","withRouter","axiosInstance","TOKEN_ENDPOINT","LoginView","Component","constructor","props","handleText","bind","handleSubmit","state","username","password","evt","setState","target","name","value","preventDefault","data","post","then","respData","console","log","defaults","headers","access","localStorage","setItem","refresh","componentDidMount","isAuthenticated","getItem","history","push","render","height","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axiosInstance from \"../tools/helpers\";\r\nimport {TOKEN_ENDPOINT} from \"../tools/endpoints\";\r\n\r\n\r\n\r\nclass LoginView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleText = this.handleText.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state={\r\n            username:'',\r\n            password: '',\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handleText(evt){\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n        const data = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        axiosInstance.post(TOKEN_ENDPOINT, data)\r\n            .then(\r\n                respData=>{\r\n                    console.log('data', respData)\r\n                    axiosInstance.defaults.headers['Authorization'] = \"Bearer \" + respData.data.access;\r\n                    localStorage.setItem('access_token', respData.data.access);\r\n                    localStorage.setItem('refresh_token', respData.data.refresh);\r\n                    localStorage.setItem('isAuthenticated', 'true');\r\n                }\r\n            )\r\n    }\r\n\r\n    componentDidMount(){\r\n        const isAuthenticated = localStorage.getItem('isAuthenticated');\r\n        if(isAuthenticated === true){\r\n            console.log('here!');\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n             <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n                 <Grid.Column style={{ maxWidth: 450 }}>\r\n                     <Header as='h2' color='teal' textAlign='center'>Log-in to your account</Header>\r\n                     <Form size='large'>\r\n                         <Segment stacked>\r\n                             <Form.Input fluid icon='user' name='username' onChange={this.handleText} iconPosition='left' placeholder='E-mail address' />\r\n                             <Form.Input\r\n                                 fluid\r\n                                 icon='lock'\r\n                                 iconPosition='left'\r\n                                 placeholder='Password'\r\n                                 type='password'\r\n                                 onChange={this.handleText}\r\n                                 name={'password'}\r\n                             />\r\n                             <Button color='teal' fluid size='large' onClick={this.handleSubmit}>\r\n                                 Login\r\n                             </Button>\r\n                         </Segment>\r\n                     </Form>\r\n                     <Message>\r\n                         New to us? <a href='#'>Sign Up</a>\r\n                     </Message>\r\n                 </Grid.Column>\r\n             </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default withRouter(LoginView);\r\n"]},"metadata":{},"sourceType":"module"}